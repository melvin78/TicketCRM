// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketCRM.DataAccess.Configuration;

#nullable disable

namespace TicketCRM.DataAccess.Migrations
{
    [DbContext(typeof(TicketCRMDbContext))]
    [Migration("20220316140637_NewTableOrganisation")]
    partial class NewTableOrganisation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.1.22076.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IdentityServerAspNetIdentity.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("SaccoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecondName")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("aspnetusers", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("HasToken")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TokenAssignmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_agents", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Chats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DisabledActions")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DisabledReactions")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Distributed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("InboxId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IndexId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Saved")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Seen")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("System")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_chats", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("DepartmentVal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_departments", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Enquiries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Timeline")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_enquiries", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.EnquiryCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryCategoryVal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("EnquiryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("EnquiryId");

                    b.HasIndex("Id");

                    b.ToTable("support_enquirycategories", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Inbox", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("UnreadCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("TicketNumber")
                        .IsUnique();

                    b.ToTable("support_inboxes", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_organizations", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Priority", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_priority", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.RecentActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SaccoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_recent_activity", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Response", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("LONGTEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<Guid>("From")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("InboxId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ResponseText")
                        .IsRequired()
                        .HasColumnType("LONGTEXT");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("To")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_responses", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AssignedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CancelledOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("CareTaker")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EnquiryCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("EnquiryId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ExpectedDueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PastDueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PriorityLevel")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReopenedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SaccoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TicketStatusId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("TransferredOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_tickets", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketAssignment", b =>
                {
                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CareTaker")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CustomerSecondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OpenedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SaccoName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfEnquiry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TicketAssignment");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketEmailReportSummary", b =>
                {
                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryCategoryVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpectedDueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketStatusVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TicketEmailReportSummary");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketInformation", b =>
                {
                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DateAssigned")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryCategoryVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReopenedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("SaccoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketStatusVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("ticket_information", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketReport", b =>
                {
                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("CareTaker")
                        .HasColumnType("char(36)");

                    b.Property<string>("CareTakerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryCategoryVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SaccoName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("saccoName");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketStatusVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("TicketReport");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TicketStatusVal")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("support_ticketstatuses", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketSummary", b =>
                {
                    b.Property<DateTime?>("AssignedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Attachments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CancelledOn")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CareTaker")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EnquiryCategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EnquiryCategoryVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnquiryType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ExpectedDueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OverDueBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PastDueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RaisedBy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReopenedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ResolvedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SaccoName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TicketStatusId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TicketStatusVal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Timeline")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferredOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("ticket_summaries", (string)null);
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Chats", b =>
                {
                    b.OwnsOne("TicketCRM.DomainLayer.MainBoundedContext.ValueObjects.ChatFile", "ChatFile", b1 =>
                        {
                            b1.Property<Guid>("ChatsId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Audio")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("Duration")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Preview")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<int>("Size")
                                .HasColumnType("int");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("ChatsId");

                            b1.ToTable("support_chats");

                            b1.WithOwner()
                                .HasForeignKey("ChatsId");
                        });

                    b.OwnsOne("TicketCRM.DomainLayer.MainBoundedContext.ValueObjects.ReplyMessage", "ReplyMessage", b1 =>
                        {
                            b1.Property<Guid>("ChatsId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<Guid>("SenderId")
                                .HasColumnType("char(36)");

                            b1.HasKey("ChatsId");

                            b1.ToTable("support_chats");

                            b1.WithOwner()
                                .HasForeignKey("ChatsId");

                            b1.OwnsOne("TicketCRM.DomainLayer.MainBoundedContext.ValueObjects.ChatFile", "ChatFile", b2 =>
                                {
                                    b2.Property<Guid>("ReplyMessageChatsId")
                                        .HasColumnType("char(36)");

                                    b2.Property<string>("Audio")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<int>("Duration")
                                        .HasColumnType("int");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Preview")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<int>("Size")
                                        .HasColumnType("int");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.Property<string>("Url")
                                        .IsRequired()
                                        .HasColumnType("longtext");

                                    b2.HasKey("ReplyMessageChatsId");

                                    b2.ToTable("support_chats");

                                    b2.WithOwner()
                                        .HasForeignKey("ReplyMessageChatsId");
                                });

                            b1.Navigation("ChatFile")
                                .IsRequired();
                        });

                    b.Navigation("ChatFile")
                        .IsRequired();

                    b.Navigation("ReplyMessage")
                        .IsRequired();
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.EnquiryCategory", b =>
                {
                    b.HasOne("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Enquiries", "Enquiries")
                        .WithMany("EnquiryCategories")
                        .HasForeignKey("EnquiryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Ticket", "Tickets")
                        .WithMany("EnquiryCategory")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enquiries");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Inbox", b =>
                {
                    b.OwnsOne("TicketCRM.DomainLayer.MainBoundedContext.ValueObjects.LastMessage", "LastMessage", b1 =>
                        {
                            b1.Property<Guid>("InboxId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<bool>("Distributed")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("New")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("Saved")
                                .HasColumnType("tinyint(1)");

                            b1.Property<bool>("Seen")
                                .HasColumnType("tinyint(1)");

                            b1.Property<Guid?>("SenderId")
                                .HasColumnType("char(36)");

                            b1.Property<DateTime?>("Timestamp")
                                .HasColumnType("datetime(6)");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("InboxId");

                            b1.ToTable("support_inboxes");

                            b1.WithOwner()
                                .HasForeignKey("InboxId");
                        });

                    b.OwnsOne("TicketCRM.DomainLayer.MainBoundedContext.ValueObjects.RoomUsers", "RoomUsers", b1 =>
                        {
                            b1.Property<Guid>("InboxId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("AvatarFrom")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("AvatarTo")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<Guid>("IdFrom")
                                .HasColumnType("char(36)");

                            b1.Property<Guid>("IdTo")
                                .HasColumnType("char(36)");

                            b1.Property<string>("UserNameFrom")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.Property<string>("UserNameTo")
                                .IsRequired()
                                .HasColumnType("longtext");

                            b1.HasKey("InboxId");

                            b1.ToTable("support_inboxes");

                            b1.WithOwner()
                                .HasForeignKey("InboxId");
                        });

                    b.Navigation("LastMessage")
                        .IsRequired();

                    b.Navigation("RoomUsers")
                        .IsRequired();
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Organization", b =>
                {
                    b.HasOne("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Ticket", "Ticket")
                        .WithMany("Organizations")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.TicketStatus", b =>
                {
                    b.HasOne("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Ticket", "Ticket")
                        .WithMany("TicketStatus")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Enquiries", b =>
                {
                    b.Navigation("EnquiryCategories");
                });

            modelBuilder.Entity("TicketCRM.DomainLayer.MainBoundedContext.SupportEntities.Ticket", b =>
                {
                    b.Navigation("EnquiryCategory");

                    b.Navigation("Organizations");

                    b.Navigation("TicketStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
